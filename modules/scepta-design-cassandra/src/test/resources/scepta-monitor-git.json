{
    "groupDetails":{
        "description":"Monitor GIT repository and validate PRs, raising JIRA if errors found",
        "endpoints":[{
            "description":"Endpoint to close a PR",
            "characteristics":[],
            "consumerOptions":{},
            "producerOptions":{
                "username":"overlordtester",
                "password":"overlord1!",
                "repoOwner":"overlordtester",
                "repoName":"camel-github-test"
            },
            "uri":"github://closePullRequest",
            "name":"gitprclose",
            "dependencies":[]
        },{
            "description":"The twitter account to send notifications.",
            "characteristics":[],
            "consumerOptions":{},
            "producerOptions":{
                "consumerKey":"atzuANIFPtqMUobLuZOcpDrty",
                "consumerSecret":"5i92HhI87We7mY516XW2LJTttKLQAeFxgTzciWtpemifhpUgt7",
                "accessToken":"2795061335-3YlxeRvAptQTnljXcUowxoVXk5n6VXzn70jGKgI",
                "accessTokenSecret":"r9kQDbUvxYNYd69B9HpfQmWV6nSPSUaUz6UTr0uLWDduS"
            },
            "uri":"twitter://timeline/user",
            "name":"twitter",
            "dependencies":[]
        },{
            "description":"Endpoint to comment on PR.",
            "characteristics":[],
            "consumerOptions":{},
            "producerOptions":{
                "username":"overlordtester",
                "password":"overlord1!",
                "repoOwner":"overlordtester",
                "repoName":"camel-github-test"
            },
            "uri":"github://pullRequestComment",
            "name":"gitprcomment",
            "dependencies":[]
        },{
            "description":"Monitor a git PR.",
            "characteristics":[],
            "consumerOptions":{
                "username":"overlordtester",
                "password":"overlord1!",
                "repoOwner":"overlordtester",
                "repoName":"camel-github-test"
            },
            "producerOptions":{},
            "uri":"github://pullRequest",
            "name":"gitpr",
            "dependencies":[]
        }],
        "name":"MonitorGIT"
    },
    "policyDetails":[{
        "description":"This policy will validate WSDL in a GIT PR.",
        "name":"ValidateWSDL",
        "resources":[],
        "dependencies":[]
    }],
    "policyDefinitions":{
        "ValidateWSDL":"<?xml version=\"1.0\" encoding=\"UTF-8\"?><beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:camel=\"http://camel.apache.org/schema/spring\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd          http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd\">\n\n  <camelContext xmlns=\"http://camel.apache.org/schema/spring\">\n    <route id=\"ValidateWSDL\">\n      <from uri=\"scepta:gitpr\"/>\n      <choice>\n        <when>\n          <simple>${body.title} == 'invalid'</simple>\n          <to uri=\"scepta:gitprclose\"/>\n          <transform>\n            <simple>INVALID PULL REQUEST: Pull request #${body.number} failed validation! ${body.html_url}</simple>\n          </transform>\n          <multicast parallelProcessing=\"true\" >\n            <to uri=\"scepta:gitprcomment\"/>\n            <to uri=\"scepta:twitter\"/>\n          </multicast>\n        </when>\n        <otherwise>\n          <transform>\n            <simple>VALID PULL REQUEST: Pull request #${body.number} successful validation! ${body.html_url}</simple>\n          </transform>\n          <to uri=\"scepta:gitprcomment\"/>\n        </otherwise>\n      </choice>\n    </route>\n  </camelContext>\n\n</beans>"
    },
    "resourceDefinitions":{}
}